# handlers/group_events_handler.py

import logging
from aiogram import Router, F, types
from config_data.config import config
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
from services.gpt_service import generate_single_response

router = Router()

# –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è: —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–º —á–∞—Ç–µ
router.message.filter(F.chat.id == config.settings.allowed_chat_id)

@router.message(F.new_chat_members)
async def welcome_new_member(message: types.Message):
    """
    –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –≤ —á–∞—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫.
    """
    # message.new_chat_members - —ç—Ç–æ —Å–ø–∏—Å–æ–∫, —Ç.–∫. –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫
    for member in message.new_chat_members:
        user_name = member.first_name
        logging.info(f"–í —á–∞—Ç –≤–æ—à–µ–ª –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name} (ID: {member.id})")

        # –°–æ–∑–¥–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è GPT
        prompt = (
            f"–í –Ω–∞—à Telegram-—á–∞—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–æ—à–µ–ª –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ {user_name}. "
            f"–ü—Ä–∏–¥—É–º–∞–π –¥–ª—è –Ω–µ–≥–æ –∫–æ—Ä–æ—Ç–∫–æ–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –æ—á–µ–Ω—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ, –∑–∞–±–∞–≤–Ω–æ–µ –∏ –Ω–µ–º–Ω–æ–≥–æ '—Å–≤–æ–µ—Å–∫–æ–µ' –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –ª–∏—Ü–∞ –≤—Å–µ–≥–æ –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. "
            f"–ó–∞—Å—Ç–∞–≤—å –µ–≥–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∫–∞–∫ –¥–æ–º–∞. –ú–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–º–∞–π–ª–∏–∫–∏."
            f"–í–ê–ñ–ù–û: –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¢–û–õ–¨–ö–û –ø—Ä–æ—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."
        )

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        welcome_text = await generate_single_response(prompt)

        if welcome_text:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —á–∞—Ç.
            # message.answer –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ,
            # —á—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ.
            await message.answer(welcome_text)
            logging.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è {user_name}.")
        else:
            # –ï—Å–ª–∏ GPT –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, –æ—Ç–ø—Ä–∞–≤–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —á–∞—Ç! üëã")
            logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç GPT, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ.")