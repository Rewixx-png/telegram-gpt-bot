# services/scheduler_service.py

import logging
from aiogram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from config_data.config import config
from services import history_service, gpt_service

async def send_weekly_summary(bot: Bot):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
    –ü–æ–ª—É—á–∞–µ—Ç —Å–∞–º–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ –Ω–µ–º "—Ñ–∞–∫—Ç" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç.
    """
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–∏: –ø–æ–∏—Å–∫ —Å–∞–º–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    activity_data = await history_service.get_weekly_activity()
    
    if not activity_data:
        logging.info("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return
        
    user_id, username, messages = activity_data
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞, –¥–µ–ª–∞–µ–º –µ–≥–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ ID
    user_mention = f"@{username}" if username else f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id}"
    
    logging.info(f"–ù–∞–π–¥–µ–Ω —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–ª–∏: {user_mention} (ID: {user_id})")

    # 2. –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è GPT
    # –°–∫–ª–µ–∏–≤–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–¥–∏–Ω –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç
    messages_text = "\n".join(messages)
    
    prompt = (
        f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç –Ω–∞–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. "
        f"–ï–≥–æ —é–∑–µ—Ä–Ω–µ–π–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ: {user_mention}. "
        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–æ–π, –∑–∞–±–∞–≤–Ω–æ–π –∏ –Ω–µ–º–Ω–æ–≥–æ '–ø–æ–¥–∫–æ–ª—å—á–µ—Å–∫–æ–π' –º–∞–Ω–µ—Ä–µ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) "
        f"—Å–¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥ –æ —Ç–æ–º, –æ —á–µ–º —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —á–∞—â–µ –≤—Å–µ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç –∏–ª–∏ –∫–∞–∫–∞—è —É –Ω–µ–≥–æ –≥–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞. "
        f"–û–±—Ä–∞—Ç–∏—Å—å –∫ –Ω–µ–º—É –Ω–∞–ø—Ä—è–º—É—é. –ù–∞–ø—Ä–∏–º–µ—Ä: '–•–µ–π, {user_mention}, –º—ã —Ç—É—Ç –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ —Ç—ã –ø—Ä–æ—Å—Ç–æ –æ–¥–µ—Ä–∂–∏–º –∫–æ—à–∫–∞–º–∏!' "
        f"–∏–ª–∏ '–¢–∞–∫-—Ç–∞–∫, {user_mention}, –∫–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –≥–æ–≤–æ—Ä–∏—Ç—å –æ –µ–¥–µ... üçï'. "
        f"–ë—É–¥—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º. "
        f"–í–ê–ñ–ù–û: –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¢–û–õ–¨–ö–û –ø—Ä–æ—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. "
        f"–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n\n{messages_text}"
    )

    # 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º "–ø–æ–¥–∫–æ–ª"
    summary_text = await gpt_service.generate_single_response(prompt)
    
    if summary_text:
        try:
            # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
            await bot.send_message(
                chat_id=config.settings.allowed_chat_id,
                text=f"üèÜ –ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é! üèÜ\n\n{summary_text}"
            )
            logging.info(f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π '–ø–æ–¥–∫–æ–ª' –¥–ª—è {user_mention} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –≤ —á–∞—Ç: {e}")
    else:
        logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞.")


def setup_scheduler(bot: Bot):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á."""
    scheduler = AsyncIOScheduler(timezone="Europe/Moscow") # –ú–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à—É –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 19:00
    scheduler.add_job(
        send_weekly_summary, 
        trigger='cron', 
        day_of_week='sun', 
        hour=19, 
        minute=0,
        kwargs={'bot': bot}
    )
    
    scheduler.start()
    logging.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω.")